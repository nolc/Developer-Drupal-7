<?php

/**
 * @file
 * Use this module to learn about Drupal's menu system.
 */
/**
 * Implementation of hook_menu().
 */
/*
function menufun_menu() {
  $items['menufun'] = array(
    'title' => 'Hola',
    'page callback' => 'menufun_hello',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
);

  return $items;
}*/



/* con argumentos en el hook menu
function menufun_menu() {
  $items['menufun'] = array(
    'title' => 'Greeting',
    'page callback' => 'menufun_hello',
        'page arguments' => array('Jane', 'Doe'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
);

  return $items;
} */


function menufun_permission() {
  return array(
   'receive greeting' => array(
   'title' => t('Receive a greeting'),
   'description' => t('Allow users receive a greeting message'),
    ),
  );
}




/**
 * Implementation of hook_menu().
 */
function menufun_menu() {

  $items['menufun'] = array(
    'title' => 'Menu Fun',
    'title callback' => 'menufun_title',
    'page callback' => 'menufun_greeting',
    'file' => 'menufun_hola.inc',
    'page arguments' => array('Jane', 'Doe'),
    'access callback' => 'user_access',
    'access arguments' => array('receive greeting'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => '-1',
  );

  $items['menufun/farewell']  = array(
    'title' => 'Farewell',
    'page callback' => 'menufun_farewell',
    'file' => 'menufun_hola.inc',
    'access callback' =>'user_access',
    'access arguments' => array('receive greeting'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['menufun/%/bar/baz'] = array(
    'title' => 'Hi',
    'page callback' => 'menufun_hola',
    'page arguments' => array(1), // The matched wildcard.
    'access callback' => TRUE,
  );

/*
  $items['user/%user_uid_only_optional'] = array(
    'title' => 'My account',
    'title callback' => 'user_page_title',
    'title arguments' => array(1),
    'page callback' => 'user_view_page',
    'page arguments' => array(1),
    'access callback' => 'user_view_access',
    'access arguments' => array(1),
    'weight' => -10,
    'menu_name' => 'user-menu',
  );

  $items['node/%node/revisions/%/view'] = array(
    'title' => 'Revisions',
    'load arguments' => array(3),
    'page callback' => 'node_show',
    'page arguments' => array(1, TRUE),
    'access callback' => '_node_revision_access',
    'access arguments' => array(1),
  );
*/
 $items['menufun/%a_zoo_animal'] = array(
    'title' => 'Hi',
    'page callback' => 'menufun_hello2',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'weight' => -10
  );

  return $items;
}


/**
 * Page callback sin argumentos.
 */
/*
function menufun_hello() {
  return t('Hello Mundo!');
}*/

/*con argumentos */
function menufun_hello($first_name = '', $last_name = '') {
  return t('Benvenido @first_name @last_name',
    array('@first_name' => $first_name, '@last_name' => $last_name) );
}



/**
 * Page callback.
 */
function menufun_hola($name = NULL) {
  return t('Hello. $name is @name', array('@name' => $name));
}


function menufun_hello2($animal) {
    return t("Hello $animal");
}
function a_zoo_animal_to_arg($arg) {
  // $arg is '%' since it is a wildcard
  // Let's replace it with a zoo animal.
  return 'tiger';
}



 /**
  * Implementation of hook_menu_alter().
  *
  * @param array $items
  * Menu items keyed by path.
  */
function menufun_menu_alter(&$items) {
  // Replace the page callback to 'user_logout' with a call to
  // our own page callback.
  $items['logout']['page callback'] = 'menufun_user_logout';
  $items['logout']['access callback'] = 'user_is_logged_in';
  // Drupal no longer has to load the user.pages.inc file
  // since it will be calling our menufun_user_logout(), which
  // is in our module -- and that's already in scope.
  unset($items['logout']['file']);
}

/**
 * Menu callback; logs the current user out, and redirects to drupal.org.
 * This is a modified version of user_logout().
 */
function menufun_user_logout() {
  global $user;

  watchdog('menufun', 'Session closed for %name.', array('%name' => $user->name));

  // Destroy the current session:
   session_destroy();
  // Run the 'logout' operation of the user hook so modules can respond
  // to the logout if they want to.
  module_invoke_all('user', 'logout', NULL, $user);

  // Load the anonymous user so the global $user object will be correct
  // on any hook_exit() implementations.
  $user = drupal_anonymous_user();


  //esta funcion es un simple redirect
  //drupal_goto('http://drupal.org/');
}


/**
 * Implements hook_menu_link_alter().
 *
 * @param $item
 * Associative array defining a menu link as passed into menu_link_save()
 */
function menufun_menu_link_alter(&$item) {
  if ($item['link_path'] == 'user/logout') {
    $item['link_title'] = 'Salirrr';
  }
}
